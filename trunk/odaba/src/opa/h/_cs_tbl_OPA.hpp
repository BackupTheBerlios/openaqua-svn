/******************************** Interface Declaration *****************************************************/
/**
\class OPA

\brief Function Tables for Client Server Interface

\date $Date: 2006/07/24 14:29:06,87 $
\dbsource l:\opa\opa.dev - ODABA Version 9.0

 */
/*************************************************************************************/
#include  <s_cs_OPA.hpp>


static IFFunction IF_CACObject[] =
{
    IFFunction(CACObject_CACObject_ci),
    IFFunction(CACObject_CACObject_ci1),
    IFFunction(CACObject_CACObject_ci2),
    IFFunction(CACObject_ChangeTimeStamp_ci),
    IFFunction(CACObject_CloseObject_ci),
    IFFunction(CACObject_DeleteExtent_ci),
    IFFunction(CACObject_DeleteExtentRef_ci),
    IFFunction(CACObject_ExecObjCtxFunc_ci),
    IFFunction(CACObject_ExtentExist_ci),
    IFFunction(CACObject_GetAccess_ci),
    IFFunction(CACObject_GetExtent_ci),
    IFFunction(CACObject_GetModCount_ci),
    IFFunction(CACObject_GetTALevel_ci),
    IFFunction(CACObject_GetTimeStamp_ci),
    IFFunction(CACObject_GetVersion_ci),
    IFFunction(CACObject_NewVersion_ci),
    IFFunction(CACObject_SetOverload_ci),
    IFFunction(CACObject_SetUserDefinedIdentity_ci),
    IFFunction(CACObject_SetVersion_ci0),
    IFFunction(CACObject_SetVersion_ci1),
    IFFunction(CACObject_SetVersion_ci2),
    IFFunction(CACObject_StartTA_ci),
    IFFunction(CACObject_StopTA_ci),
    IFFunction(CACObject_UpdateTimestamp_ci),
    IFFunction(CACObject_VersionCount_ci),
    IFFunction(CACObject_VersionIntervall_ci),
};

static IFFunction IF_CClient[] =
{
    IFFunction(CClient_BackupDB_ci),
    IFFunction(CClient_CacheConnection_ci),
    IFFunction(CClient_CheckDB_ci),
    IFFunction(CClient_DictDisplay_ci),
    IFFunction(CClient_Exist_ci),
    IFFunction(CClient_GetClientHandle_ci0),
    IFFunction(CClient_GetClientHandle_ci1),
    IFFunction(CClient_GetDBError_ci),
    IFFunction(CClient_GetDataSource_ci),
    IFFunction(CClient_GetHandleInfo_ci1),
    IFFunction(CClient_GetMachineType_ci),
    IFFunction(CClient_GetPointerSize_ci),
    IFFunction(CClient_GetServerVariable_ci),
    IFFunction(CClient_GetServerVersion_ci),
    IFFunction(CClient_KillClient_ci),
    IFFunction(CClient_RestoreDB_ci),
    IFFunction(CClient_SayHello_ci),
    IFFunction(CClient_SendClientMessage_ci0),
    IFFunction(CClient_SetClientName_ci),
    IFFunction(CClient_SetServerVariable_ci),
    IFFunction(CClient_SetupDataSource_ci),
    IFFunction(CClient_StartPause_ci),
    IFFunction(CClient_StatDisplay_ci),
    IFFunction(CClient_StopPause_ci),
    IFFunction(CClient_SysInfoDisplay_ci),
};

static IFFunction IF_CDBHandle[] =
{
    IFFunction(CDBHandle_ActivateShadowBase_ci),
    IFFunction(CDBHandle_CDBHandle_ci0),
    IFFunction(CDBHandle_ChangeRecovery_ci),
    IFFunction(CDBHandle_CheckLicence_ci1),
    IFFunction(CDBHandle_CheckLicence_ci2),
    IFFunction(CDBHandle_CloseDBHandle_ci),
    IFFunction(CDBHandle_CloseRecovery_ci),
    IFFunction(CDBHandle_CloseWorkspace_ci),
    IFFunction(CDBHandle_ConsolidateWorkspace_ci),
    IFFunction(CDBHandle_DeactivateShadowBase_ci),
    IFFunction(CDBHandle_DeleteWorkspace_ci),
    IFFunction(CDBHandle_DisableWorkspace_ci),
    IFFunction(CDBHandle_DiscardWorkspace_ci),
    IFFunction(CDBHandle_EnableWorkspace_ci),
    IFFunction(CDBHandle_ExecDBCtxFunc_ci),
    IFFunction(CDBHandle_ExistWorkspace_ci),
    IFFunction(CDBHandle_FlushClusterPool_ci),
    IFFunction(CDBHandle_GetDatabaseID_ci),
    IFFunction(CDBHandle_GetNewTypeID_cidb),
    IFFunction(CDBHandle_GetPath_ci),
    IFFunction(CDBHandle_GetRecoveryFile_ci),
    IFFunction(CDBHandle_GetRecoveryNum_ci),
    IFFunction(CDBHandle_GetRecoveryPath_ci),
    IFFunction(CDBHandle_GetRecoveryStartNumber_ci),
    IFFunction(CDBHandle_GetRecoveryType_ci),
    IFFunction(CDBHandle_GetSchemaVersion_ci),
    IFFunction(CDBHandle_GetSystemVersion_ci),
    IFFunction(CDBHandle_GetVersionString_ci),
    IFFunction(CDBHandle_GetWorkspace_ci),
    IFFunction(CDBHandle_InitDataArea_ci),
    IFFunction(CDBHandle_InitMainBase_ci),
    IFFunction(CDBHandle_InitRecovery_ci),
    IFFunction(CDBHandle_InitSubBase_ci),
    IFFunction(CDBHandle_IsLicenced_ci),
    IFFunction(CDBHandle_LocateWorkspace_ci),
    IFFunction(CDBHandle_OpenRecovery_ci),
    IFFunction(CDBHandle_OpenWorkspace_ci),
    IFFunction(CDBHandle_ResetLastSchemaVersion_ci),
    IFFunction(CDBHandle_ResetLastVersion_ci),
    IFFunction(CDBHandle_SetupTypeID_cidb),
};

static IFFunction IF_CDictionary[] =
{
    IFFunction(CDictionary_CDictionary_ci0),
    IFFunction(CDictionary_CloseDictionary_ci),
    IFFunction(CDictionary_CreateExtentDef_ci),
    IFFunction(CDictionary_CreateStructDef_ci),
    IFFunction(CDictionary_CreateTempExtent_ci),
    IFFunction(CDictionary_GetTempName_ci),
};

static IFFunction IF_CNode[] =
{
    IFFunction(CNode_Add_ci),
    IFFunction(CNode_AddReference_ci0),
    IFFunction(CNode_CanUpdateCollection_ci),
    IFFunction(CNode_Cancel_ci0),
    IFFunction(CNode_ChangeBuffer_ci0),
    IFFunction(CNode_ChangeMode_ci0),
    IFFunction(CNode_CheckReadOnly_ci),
    IFFunction(CNode_CheckWProtect_ci0),
    IFFunction(CNode_Close_ci0),
    IFFunction(CNode_Contains_ci),
    IFFunction(CNode_CopyInst_ci),
    IFFunction(CNode_CopySet_ci),
    IFFunction(CNode_Delete_ci0),
    IFFunction(CNode_Delete_ci1),
    IFFunction(CNode_DeleteSet_ci),
    IFFunction(CNode_DisableKeyCheck_ci0),
    IFFunction(CNode_Duplicate_ci0),
    IFFunction(CNode_EnableKeyCheck_ci0),
    IFFunction(CNode_ExecPropCtxFunc_ci),
    IFFunction(CNode_ExecStrCtxFunc_ci),
    IFFunction(CNode_FirstKey_ci),
    IFFunction(CNode_Get_ci0),
    IFFunction(CNode_Get_ci1),
    IFFunction(CNode_GetCollectionID_ci),
    IFFunction(CNode_GetCount_ci),
    IFFunction(CNode_GetGenAttrType_ci),
    IFFunction(CNode_GetGenOrderType_ci),
    IFFunction(CNode_GetGlobalID_ci0),
    IFFunction(CNode_GetID_ci0),
    IFFunction(CNode_GetID_ci1),
    IFFunction(CNode_GetID_ByID_ci1),
    IFFunction(CNode_GetInstModCount_ci),
    IFFunction(CNode_GetKey_ci),
    IFFunction(CNode_GetRefModCount_ci),
    IFFunction(CNode_GetRelative_ci0),
    IFFunction(CNode_GetRelativeCount_ci),
    IFFunction(CNode_GetRelativeIndex_ci),
    IFFunction(CNode_GetSelectedKey_ci),
    IFFunction(CNode_Get_ByID_ci1),
    IFFunction(CNode_Group_ci),
    IFFunction(CNode_IsNewInstance_ci),
    IFFunction(CNode_Locate_ci),
    IFFunction(CNode_LocateKey_ci),
    IFFunction(CNode_Lock_ci),
    IFFunction(CNode_LockSet_ci),
    IFFunction(CNode_Modify_ci),
    IFFunction(CNode_Move_ci),
    IFFunction(CNode_MoveDown_ci),
    IFFunction(CNode_MoveUp_ci),
    IFFunction(CNode_NextKey_ci),
    IFFunction(CNode_OpenAccessPath_ci1),
    IFFunction(CNode_OpenAccessPath_ci2),
    IFFunction(CNode_OpenBaseNode_ci),
    IFFunction(CNode_OpenCopyNode_ci),
    IFFunction(CNode_OpenOperationNode_ci1),
    IFFunction(CNode_OpenOperationNode_ci2),
    IFFunction(CNode_OpenPathCopy_ci),
    IFFunction(CNode_OpenSubNode_ci),
    IFFunction(CNode_Position_ci),
    IFFunction(CNode_ProvGenAttribute_ci),
    IFFunction(CNode_Provide_ci0),
    IFFunction(CNode_Provide_ci1),
    IFFunction(CNode_Provide_ci2),
    IFFunction(CNode_ProvideGUID_ci),
    IFFunction(CNode_ReadBuffer_ci0),
    IFFunction(CNode_Refresh_ci),
    IFFunction(CNode_RegisterHandle_ci),
    IFFunction(CNode_RemoveFromCollection_ci),
    IFFunction(CNode_Rename_ci),
    IFFunction(CNode_Reopen_intern_ci),
    IFFunction(CNode_RepairIndex_ci),
    IFFunction(CNode_Reset_ci),
    IFFunction(CNode_ResetExpression_ci),
    IFFunction(CNode_ResetWProtect_ci),
    IFFunction(CNode_Save_intern_ci),
    IFFunction(CNode_SetAction_ci),
    IFFunction(CNode_SetBaseNode_ci),
    IFFunction(CNode_SetContextVariables_ci),
    IFFunction(CNode_SetExpression_ci),
    IFFunction(CNode_SetGenAttribute_ci),
    IFFunction(CNode_SetInstAction_ci),
    IFFunction(CNode_SetOrder_ci),
    IFFunction(CNode_SetType_ci),
    IFFunction(CNode_SetWProtect_ci),
    IFFunction(CNode_Unlock_ci),
    IFFunction(CNode_UnlockSet_ci),
    IFFunction(CNode_UnregisterHandle_ci),
    IFFunction(CNode_Update_intern_ci),
};

static IFFunction IF_COperation[] =
{
    IFFunction(COperation_Execute_ci),
    IFFunction(COperation_Open_ci),
    IFFunction(COperation_ProvExpression_ci1),
    IFFunction(COperation_ProvExpression_ci2),
};


#include <_cs_ctbl_OPA.hpp>
