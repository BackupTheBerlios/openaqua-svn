/********************************* Class Declaration ***************************/
/**
\package  {{{{{|{2006/03/13|21:30:02,18}|(REF)
\class    SDB_CodeSet

\brief    Enumeration
          An  enumeration  is  a  simple  classification. It defines a number of
          categories  by its  name and  a number  of associated codes (numerical
          values). Enumerations are based on numerical values, always.
          Since  categories may generate new classes and thus, new object types,
          each  category  in  an  enumeration  can  be  associated  with  a type
          (structure).  In this case, the enumeration  must define the base type
          (base  structure) for all object types  generated by categories of the
          enumeration.  An enumeration for { 0: male, 1: female} based on Person
          may generate classes for each category as Man and Woman.

\date     $Date: 2006/03/13 21:30:07,82 $
\dbsource ops.dev - ODABA Version 9.0
*/
/******************************************************************************/
#ifndef   SDB_CodeSet_HPP
#define   SDB_CodeSet_HPP

class     SDB_CodeSet;

#ifndef   P_ODS_Class_HPP
#define   P_ODS_Class_HPP
#include  <sPI.hpp>
class       ODS_Class;
PI_dcl     (ODS_Class)
#endif
#ifndef   P_SDB_CodeSet_HPP
#define   P_SDB_CodeSet_HPP
#include  <sPI.hpp>
class       SDB_CodeSet;
PI_dcl     (SDB_CodeSet)
#endif
#ifndef   P_SDB_Extend_HPP
#define   P_SDB_Extend_HPP
#include  <sPI.hpp>
class       SDB_Extend;
PI_dcl     (SDB_Extend)
#endif
#include  <sDatabaseHandle.hpp>
#include  <sDictionaryHandle.hpp>
#include  <sSDB_Member.hpp>
#include  <sSDB_Type.hpp>
#pragma pack(8)

class  SDB_CodeSet :public SDB_Type
{
protected  :         int32                                        ResID ATTR_ALIGN(4);                                       // Resource id
protected  :         SDB_Member                                   value_def;                                                 // Category definition
protected  :         char                                         base_type[40];                                             // Base type for typed enumeration
protected  :         PI(SDB_CodeSet)                              basic_set;                                                 // Base enumeration
protected  :         PI(SDB_CodeSet)                              cs_derivates;                                              // Derived enumerations
protected  :         PI(SDB_Extend)                               cs_extends;                                                // Enumeration extent

public     :
                     int32                                        get_ResID() { return(ResID); }
                     SDB_Member                                  &get_value_def() { return(value_def); }
                     char                                        *get_base_type() { return(base_type); }
                     PI(SDB_CodeSet)                             &get_basic_set() { return(basic_set); }
                     PI(SDB_CodeSet)                             &get_cs_derivates() { return(cs_derivates); }
                     PI(SDB_Extend)                              &get_cs_extends() { return(cs_extends); }
public     :         OPS7ImpExp                  logical CreateEnum (DictionaryHandle &dictionary, char *scoped_name );
public     :         OPS7ImpExp                  logical DeleteEnum ( );
public     :         OPS7ImpExp                  char *GetDocFileName ( );
public     :         OPS7ImpExp                  logical Initialize (char *csnames, char *basetype, DatabaseHandle &dbhandle );
};

#pragma pack()
#endif
