«EXTENSION org::fornax::cartridges::uml2::javabasic::extensions::Helper»

/**
* Creates the generalization (extends Interface1, Interface2 und so on) for the given
* uml::Interface
*/
«DEFINE generalization FOR uml::Interface»
	«IF !generalization.isEmpty»
	extends «FOREACH generalization AS g SEPARATOR ","»«g.general.name»«ENDFOREACH»
	«ENDIF»
«ENDDEFINE»

/**
* Creates the generalization (extends SuperClass) for the given uml::Class
*/
«DEFINE generalization FOR uml::Class»
	«IF !generalization.isEmpty»
	extends «((uml::Generalization) generalization.get(0)).general.name»
	«ENDIF»
«ENDDEFINE»

/**
* Creates the generalization (extends Interface1, Interface2 und so on) for the given JavaBasic::Entity
* for the generating Interface
*/
«DEFINE generalizationEntityInterface FOR uml::Class»
	«IF !generalization.isEmpty»
	extends «((uml::Generalization) generalization.get(0)).general.name»
	«ENDIF»
«ENDDEFINE»

/**
* Creates the generalization (extends Interface1, Interface2 und so on) for 
* the given JavaBasic::Entity for the generating abstract class
*/
«DEFINE generalizationEntityAbstract FOR uml::Class»
	«IF !generalization.isEmpty»
	extends Abstract«((uml::Generalization) generalization.get(0)).general.name»
	«ENDIF»
«ENDDEFINE»

/**
* Creates the operations marked as abstract in the superclass
*/
«DEFINE operation FOR uml::Class»
	«IF !generalization.isEmpty»
		«FOREACH ((uml::Generalization) generalization.get(0)).general.getOperations() AS o»
			«EXPAND Operation::operation FOR o»
		«ENDFOREACH»
	«ENDIF»
«ENDDEFINE»