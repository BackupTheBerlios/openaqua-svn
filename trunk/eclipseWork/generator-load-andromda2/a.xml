<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

    <!-- ========================= GENERAL DEFINITIONS ========================= -->

    <!-- Message source for this context, loaded from localized "messages_xx" files -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename"><value>messages</value></property>
    </bean>

	 <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
		 <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
		 <property name="url" value="jdbc:hsqldb:file:/tmp/foo2.dat"/>
		 <property name="username" value="sa"/>
		 <property name="password" value=""/>
    </bean>

    <!-- applicationContext merge-point -->
    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource"><ref bean="dataSource"/></property>
        <property name="mappingResources">
            <list>
                <value>de/openaqua/dev/entities/Contract.hbm.xml</value>
                <value>de/openaqua/dev/entities/Country.hbm.xml</value>
                <value>de/openaqua/dev/entities/City.hbm.xml</value>
                <value>de/openaqua/dev/entities/Address.hbm.xml</value>
                <value>de/openaqua/dev/entities/Person.hbm.xml</value>
                <value>de/openaqua/dev/entities/PhoneFormat.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.query_cache_factory">net.sf.hibernate.cache.StandardQueryCacheFactory</prop>
                <!-- applicationContext hibernateProperties merge-point -->
            </props>
        </property>
    </bean>

    <!-- The Hibernate interceptor -->
    <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>

    <!-- Contract Entity Proxy with inner Contract Entity implementation -->
    <bean id="contractDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.entities.ContractDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.entities.ContractDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Country Entity Proxy with inner Country Entity implementation -->
    <bean id="countryDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.entities.CountryDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.entities.CountryDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- City Entity Proxy with inner City Entity implementation -->
    <bean id="cityDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.entities.CityDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.entities.CityDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Address Entity Proxy with inner Address Entity implementation -->
    <bean id="addressDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.entities.AddressDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.entities.AddressDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- Person Entity Proxy with inner Person Entity implementation -->
    <bean id="personDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.entities.PersonDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.entities.PersonDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- PhoneFormat Entity Proxy with inner PhoneFormat Entity implementation -->
    <bean id="phoneFormatDao" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.entities.PhoneFormatDaoImpl">
                <property name="sessionFactory"><ref local="sessionFactory"/></property>
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.entities.PhoneFormatDao</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= Start of SERVICE DEFINITIONS ========================= -->

    <!-- Service Transactional Interceptor -->
    <bean id="serviceTransactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager"><ref bean="transactionManager"/></property>
        <property name="transactionAttributeSource">
            <value>
                de.openaqua.dev.services.CountryService.getAllCountries=PROPAGATION_REQUIRED
                de.openaqua.dev.services.CountryService.getCountryByIso=PROPAGATION_REQUIRED
                de.openaqua.dev.services.PersonService.getAllPerson=PROPAGATION_REQUIRED
            </value>
        </property>
    </bean>

    <!-- CountryService Service Proxy with inner CountryService Service Implementation -->
    <bean id="countryService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.services.CountryServiceImpl">
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.services.CountryService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- PersonService Service Proxy with inner PersonService Service Implementation -->
    <bean id="personService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target">
            <bean class="de.openaqua.dev.services.PersonServiceImpl">
            </bean>
        </property>
        <property name="proxyInterfaces">
            <value>de.openaqua.dev.services.PersonService</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>serviceTransactionInterceptor</value>
                <value>hibernateInterceptor</value>
            </list>
        </property>
    </bean>

    <!-- ========================= End of SERVICE DEFINITIONS ========================= -->

</beans>
