«IMPORT org::openarchitectureware::meta::uml::classifier»

«EXTENSION java::NamingConventions»
«EXTENSION java::Associations»

«DEFINE ReferenceVariables FOR Class»
	«FOREACH AssociationEnd.Opposite.select(ae|ae.isNavigable) AS ae»
		private «ae.fqn()» «ae.asInstanceVar()»;
	«ENDFOREACH»
«ENDDEFINE»


«DEFINE AccessorMethods FOR Class»
	«EXPAND ToOneAccessorMethods FOREACH AssociationEnd.Opposite.select(ae|!ae.isMultiple && ae.isNavigable)»
	«EXPAND ToManyAccessorMethods FOREACH AssociationEnd.Opposite.select(ae|ae.isMultiple && ae.isNavigable)»
«ENDDEFINE»


«DEFINE ToOneAccessorMethods FOR AssociationEnd»
	public void «asSetter()» («Class.fqn()» «asParameter()») {
		this.«asInstanceVar()» = «asParameter()»;
	}

	public «Class.fqn()» «asGetter()» () {
		return this.«asInstanceVar()»;
	}
	
«ENDDEFINE»


«DEFINE ToManyAccessorMethods FOR AssociationEnd»
	public void add«NameS.toFirstUpper()» («Class.fqn()» «asParameter()») {
		this.«asInstanceVar()».add(«asParameter()»);
	}
	
	public void remove«NameS.toFirstUpper()» («Class.fqn()» «asParameter()») {
		this.«asInstanceVar()».remove(«asParameter()»);
	}
	
	public «iterator()» «asGetter()» () {
		return this.«asInstanceVar()».iterator();
	}
	
«ENDDEFINE»

