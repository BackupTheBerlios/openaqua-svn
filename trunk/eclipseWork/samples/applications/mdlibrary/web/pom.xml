<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.magicdraw.samples.library</groupId>
        <artifactId>mdlibrary</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <artifactId>mdlibrary-web</artifactId>
    <packaging>war</packaging>
    <name>MagicDraw Library Web</name>
    <dependencies>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>mdlibrary-common</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>${pom.groupId}</groupId>
            <artifactId>mdlibrary-core</artifactId>
            <version>${pom.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
        </dependency>
        <dependency>
            <groupId>struts</groupId>
            <artifactId>struts</artifactId>
        </dependency>
        <dependency>
            <groupId>displaytag</groupId>
            <artifactId>displaytag</artifactId>
        </dependency>
        <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>itext</groupId>
            <artifactId>itext</artifactId>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-j2ee</artifactId>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <targetPath>../${pom.artifactId}-${pom.version}</targetPath>
                <filtering>true</filtering>
            </resource>
            <!-- to filter mdlibrary-ds.xml, add src/main/config -->
            <resource>
                <directory>src/main/config</directory>
                <targetPath>../</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <tasks>
                        <copy todir="${pom.basedir}/target/src" 
                            overwrite="true" failonerror="false">
                            <fileset dir="${pom.basedir}/src/main/jsp">
                                <include name="**/*"/>
                            </fileset>
                            <fileset dir="${pom.basedir}/src/main">
                                <include name="css/**"/>
                                <include name="images/**"/>
                            </fileset>
                            <fileset dir="${pom.basedir}/src/main">
                                <include name="skins/**"/>
                            </fileset>
                        </copy>
                    </tasks>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromda-multi-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <warSourceDirectory>target/src</warSourceDirectory>
                    <!-- 
                        Added next line because JBoss throws an exception when log4j is deployed inside a WAR.
                        See http://maven.apache.org/plugins/maven-war-plugin/examples/skinny-wars.html
                        for more details why this works.
                    -->
                    <warSourceExcludes>WEB-INF/lib/log4j*.jar</warSourceExcludes>
                    <excludes>**/*.java</excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.andromda.maven.plugins</groupId>
                <artifactId>andromdapp-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <deployLocation>
                        ${jboss.home}/server/mdlibrary/deploy</deployLocation>
                    <!-- include the generated data source file -->
                    <includes>
                        <include>*ds.xml</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>